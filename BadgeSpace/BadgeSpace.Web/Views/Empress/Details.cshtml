@using BadgeSpace.Domain.Resources.Enums
@using BadgeSpace.Infra
@model BadgeSpace.Domain.Entities.Certification.CertificationModel
@inject ApplicationDbContext context

@{
    ViewData["Title"] = "Details";
    var empresa = User.Identity!.IsAuthenticated ? context.Users.FirstOrDefault(e => e.NormalizedEmail == User.Claims.ToList()[2].Value) : null;
}

<h1>Detalhes</h1>
<div>
    @{
        var img = $"data:image/gif;base64,{Convert.ToBase64String(Model.Image!)}";
    }
    <h4>BadgeSpace</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.StudentName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.StudentName)
        </dd>
        @if (User.Identity!.IsAuthenticated)
        {
            if (User.IsInRole(nameof(Roles.EMPRESA)))
            {
                <dt class = "col-sm-2">
                    @Html.DisplayNameFor(model => model.StudentEmail)
                </dt>
                <dd class = "col-sm-10">
                    @Html.DisplayFor(model => model.StudentEmail)
                </dd>
            }
        }
        
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CourseName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CourseName)
        </dd>
        @if (User.Identity!.IsAuthenticated)
        {
            if (User.IsInRole(nameof(Roles.EMPRESA)))
            {
                if (Model.CourseId == empresa!.Id)
                {
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Code)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Code)
                    </dd>
                }
            }
        }
        
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Type)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Type)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Level)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Level)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Time)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Time)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Image)
        </dt>
        <dd class = "col-sm-10">
            <img src=@img style="max-width:100px; max-height:100px;" />
        </dd>
        <dt class = "col-sm-2">
            @Html.Name("Empresa emissora")
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => (context.Users.FirstOrDefault(e => e.Id == Model.CourseId))!.Email!)
        </dd>
    </dl>
</div
@if (User.Identity!.IsAuthenticated)
{
    if (User.IsInRole(nameof(Roles.EMPRESA)))
    {
        if (Model.CourseId == empresa!.Id)
        {
            <div>
                <a asp-action="Edit" class="btn btn-primary" asp-route-id="@Model.Id">Edit</a>
                <a asp-action="Index" class="btn"><i class="ri-arrow-left-line"></i> Voltar para lista</a>
            </div>
        }
    }
}

